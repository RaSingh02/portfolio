[{"content":"\u003ch3 id=\"what-are-fire-drills\"\u003eWhat are fire drills?\u003c/h3\u003e\n\u003cp\u003eFire drills are practices in software development meant to explore scenarios that can break projects. They can help explore them and identify additional work needed to prevent such incidents from occurring and preventing future issues. Many companies have systems in place to force engineers to create resilient products at the beginning instead of rushing out half-baked ideas that may fail when stressed. A famous system that comes to mind is Netflix\u0026rsquo;s Chaos Monkey. Chaos Monkey will randomly kill servers in the system or other portions of the system. As stated before, this forces engineers to create resilient software, such that they can continue to operate even when individual machines or systems fail. This approach is beneficial for larger companies as their development and team sizes grow regularly. On the other hand, this also means that smaller companies with less sophisticated systems will not benefit from this approach.\u003c/p\u003e\n\u003ch3 id=\"benefits\"\u003eBenefits\u003c/h3\u003e\n\u003cp\u003eRunning fire drills can help find obvious changes that may be overlooked since they are so simple. For example, improving access to databases or having multiple backup options for the database itself. Fire drills can help uncover obscure failures as they dig through the cracks and crevices of software applications. However, the nature of these drills will vary from scenario to scenario. Each team has its own different needs. They include communication, documentation, and other human factors whereas Chaos Monkey\u0026rsquo;s downside is that it narrows in on software design.\u003c/p\u003e\n\u003ch3 id=\"dirt\"\u003eDiRT\u003c/h3\u003e\n\u003cp\u003eThis is Google\u0026rsquo;s own version of fire drills. They emphasize that it is important to not point fingers at any single individual or team but to accept that things do go wrong in reality. Instead, emphasis should be on improving systems to prevent any future incidents to occur. Teams need to recognize that there is value in learning about disasters even if it does chip away at the budget. In the case of DiRT, it involves the work of hundreds of engineering and operations personnel over a time period. It has even caused accidental outages and revenue loss for Google. But the bright side is that since it is a company-wide event, the right personnel are there to help contain issues that may arise from these drills.\u003c/p\u003e\n","description":"This post will be talking about the practices of fire drills in software development.","image":null,"permalink":"/blogs/blog_5/","title":"Fire Drills"},{"content":"\u003ch3 id=\"types-of-databases\"\u003eTypes of Databases\u003c/h3\u003e\n\u003cp\u003eThere are three general database types based on the following models:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eRelational Database\u003c/li\u003e\n\u003cli\u003eNon-Relational Database\u003c/li\u003e\n\u003cli\u003eObject-Oriented Database\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eWe will be taking a look at all three types of databases. The main difference between them is the way information looks inside the database, as such each model has its own management system and data relationships.\u003c/p\u003e\n\u003ch4 id=\"relational-database\"\u003eRelational Database\u003c/h4\u003e\n\u003cp\u003eThe relational database is the most used out of the three and is the oldest model. There are three critical components of this database:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eTables\u003c/li\u003e\n\u003cli\u003eRows\u003c/li\u003e\n\u003cli\u003eColumns\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eUsing a query language, most commonly SQL, or Structured Query Language, a relational database provides a set of data rows in response to a query. Relational databases are most commonly used for online transaction systems where support for many users and frequent queries are needed to complete online transactions. They are also used in IoT, the Internet of Things, devices since they are lightweight and have the processing power needed for edge computing. Where the device connects to a network to deliver and receive instructions from a central server, most likely the cloud or a data center. Relational databases are also used in data warehouses where mass storage can be easily integrated and optimized for mass queries from multiple sources.\u003c/p\u003e\n\u003ch4 id=\"non-relational-database-nosql\"\u003eNon-Relational Database (NoSQL)\u003c/h4\u003e\n\u003cp\u003eThis type of database stores data differently from relational databases. There are four different types of NoSQL databases types:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eDocument\u003c/li\u003e\n\u003cli\u003eKey-Value\u003c/li\u003e\n\u003cli\u003eColumn based\u003c/li\u003e\n\u003cli\u003eGraph\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eNon-relational databases are known to be flexible as they can easily handle different levels of data easily, from structured to unstructured. They can also scale well with on-demand servers and can provide quick query responses. Due to their real-time data replication, they have limited downtime which is beneficial towards large data centers, such as those that Google has. The scalability of cloud-computing architecture scales beautifully with non-relational databases as well. NoSQL databases are generally used for real-time systems as they provide agile real-time and combine operational and analytical systems into one. They can be customized to fit any users\u0026rsquo; needs as they have elastic scaling. Since NoSQL has low latency, they are used in financial systems to detect fraud quickly and efficiently.\u003c/p\u003e\n\u003ch4 id=\"object-database\"\u003eObject Database\u003c/h4\u003e\n\u003cp\u003eThis type of database represents data similar to that of objects in an object-oriented programming language. There are four critical components of an object database:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eObjects\u003c/li\u003e\n\u003cli\u003eClasses\u003c/li\u003e\n\u003cli\u003eMethods\u003c/li\u003e\n\u003cli\u003ePointers\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eObject databases combine concepts from object-oriented programming with database capabilities. Due to the nature of this database, data is easy to retrieve and save. It also helps with modeling as real-world issues and information are more closely related to objects, making complex tasks easier to model and solve. With user-defined classes, custom and complex data types can be created to fit the users\u0026rsquo; needs. This database also combines seamlessly with object-oriented programming languages such as Java. Due to ACID compliance, transactions can occur with conflicting changes. These databases are great for high-performance applications where fast data retrieval is necessary. Scientific data calculation and storage are also compatible as complex data can easily be defined and stored to the users\u0026rsquo; needs.\u003c/p\u003e\n","description":"This post focuses on the main three different types of databases and the differences between SQL and NoSQL.","image":null,"permalink":"/blogs/blog_4/","title":"Database Types"},{"content":"\u003ch3 id=\"modern-javascript\"\u003eModern Javascript\u003c/h3\u003e\n\u003cp\u003eJavascript is one of the most used platforms for application and website development to this day. In the beginning, due to the lack of back-end support and lack of technologies, Javascript was mostly used for front-end development. The creation of other technologies, such as NodeJS, allowed Javascript to work as the main back-end handler. NodeJS allowed Javascript to run like a server and not only inside the browser. With the creation of NodeJS came out NPM, or Node Package Manager. This allowed Javascript to become fully fleshed out with a package manager with modules similar to libraries in another language such as Python.\u003c/p\u003e\n\u003ch3 id=\"oop-vs-functional-programming\"\u003eOOP vs. Functional Programming\u003c/h3\u003e\n\u003cp\u003eFunctional programming is a programming technique that accentuates the functional factors required for creating and implementing programs. It uses a declarative programming model where the variables and functions are the key elements. Due to the definition of functional programming, it is great for data science work, with the language R being the most popular among data scientists. It provides advantages such as efficiency, lazy evaluation, nested functions, bug-free code, and parallel programming. In other words, functional programming is to write statements that execute a particular task for the application within the function itself. Functions can be easily reused and invoked at any time. This helps ensure the code stays easily readable and saves time and effort recoding things that already have been created beforehand. Functional programming is based on six different concepts:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eHigh Order Functions (HOF)\u003c/li\u003e\n\u003cli\u003ePure functions\u003c/li\u003e\n\u003cli\u003eRecursion\u003c/li\u003e\n\u003cli\u003eStrict and Non-strict evaluation\u003c/li\u003e\n\u003cli\u003eType systems\u003c/li\u003e\n\u003cli\u003eReferential Transparency\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eFunctional languages are good for when you have a fixed set of things and as your code evolved, you add new operations on top of the existing ones. This is primarily accomplished through the use of new functions that use existing data types and existing functions already made.\u003c/p\u003e\n\u003cp\u003eOn the other hand, object-oriented programming is a conceptual programming technique that uses objects as the keys. As such, it is an imperative programming model that uses objects and methods as the key elements. There are four main concepts for object-oriented programming:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eAbstraction\u003c/li\u003e\n\u003cli\u003eInheritance\u003c/li\u003e\n\u003cli\u003ePolymorphism\u003c/li\u003e\n\u003cli\u003eEncapsulation\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eIn an object-oriented programming language, the objects can be easily reused in another application. In addition, new objects can be easily created for the same class, and code can be easily maintained and altered when the need arises. With this, comes the benefit of memory management. This is fantastic for creating large programs which then can be divided into smaller pieces and helps to plan out certain components or phases in their own unique ways. Object-oriented languages are good for when you have a set of fixed operations on things and as your code evolves you add new things. This can either be accomplished with the use of new classes that reuse existing methods or existing classes that are already made.\u003c/p\u003e\n\u003cp\u003eThere are programming languages that support both. For example, Python and Java both support object-oriented concepts and functional concepts by supporting various inbuilt functions are can be imported through the use of external libraries that others have built.\u003c/p\u003e\n","description":"This post focuses on Modern Javascript and the differences between OOP and Functional Programming.","image":null,"permalink":"/blogs/blog_3/","title":"Modern JS \u0026 OOP vs. FP"},{"content":"\u003ch3 id=\"the-rise-of-user-experience-design\"\u003eThe Rise of User-Experience Design\u003c/h3\u003e\n\u003cp\u003eWhat is User Experience Design? User Experience is the feeling a user experience while interacting with a website or application. The user experience is a critical step in the development cycle as it focuses on fulfilling the user\u0026rsquo;s needs or desires. User experience is also a strategic method to help avoid expensive revisions down the line. Companies can not change whole elements on their products without foreseeing the consequences of such changes. Interfaces need to be fluid and evolve as the userbases\u0026rsquo; needs change. Fluid discussion and user testing are vital in order to allow interfaces to behave as such. By creating low fidelity and interactive prototypes in front of users, the UX team is able to identify issues early on and work towards fixing them and also find more effective solutions using user feedback. By creating these quick interactive mockups, discovery costs are low as a result while fluid paths can be sketched out to many different solutions. By understanding user experience, a company can effectively allocate its resources. A good application is reliant on strong communication between departments, management, creativity, and userbase.\u003c/p\u003e\n\u003ch3 id=\"search-engine-optimization\"\u003eSearch Engine Optimization\u003c/h3\u003e\n\u003cp\u003eWhat is Search Engine Optimization (SEO)? SEO is the process of improving your site to increase its visibility when people search for products or services related to your business in many different search engines, such as Google, DuckDuckGo, Bing, etc. The better visibility your website has in search results, the more likely you are to garner attention and attract prospective customers to your business. SEO is the foundation of a holistic marketing ecosystem. When you understand what your userbase wants, you can implement that knowledge across your campaigns, your website, and social media properties. Keeping up with current trends is also important, just like when producing ad campaigns. By storing headers or other page content in media that is not text, it can make it difficult for search engine algorithms to identify. That is why using the \u0026ldquo;alt\u0026rdquo; in image tags is so important to allow search engines to recognize that content on the page. Using title tags is also very important, as many search engines will use those tags to display search results to the user. Adding descriptive meta tags helps as well, as search engines will often display these as page snippets under the title tags. Make sure to update your themes to account for seasonal changes as a specific seasonal-themed website may get fewer results shown in other seasons.\u003c/p\u003e\n","description":"This post focuses on the rise of User-Experience Design in the past couple of decades and how search engine optimization has become such a critical role in directing traffic to your site.","image":null,"permalink":"/blogs/blog_2/","title":"User-Experience Design"},{"content":"\u003ch3 id=\"what-is-agile\"\u003eWhat is Agile?\u003c/h3\u003e\n\u003cp\u003eFirst, we should focus on the definition of Agile and implementations that exist within the DevOps world. According to the Agile\nManifesto website, the core of Agile is to bring people back into the construction of software, breaking down communication barriers\nbetween developers, project managers, and other members of the team. The final core is the idea of embracing change. There are two\nversions of Agile we will be talking about in this post. The first version is known as Scrum and the second is known as Kanban.\u003c/p\u003e\n\u003ch4 id=\"scrum\"\u003eScrum\u003c/h4\u003e\n\u003cp\u003eThe most important aspect of Scrum to remember is the backlog. The backlog is just a prioritized list of issues or features to work on.\nDevelopment teams using Scrum usually work in sprints where the team works to complete a set amount of work in a set amount of time. The\namount of work is usually decided before the sprint takes place so the team isn\u0026rsquo;t overwhelmed or only implementing half-baked features.\nThe aim of the sprint is by the end to have produced a shippable version of the product so that updates and features are constantly being\nadded. Think of the product like a software, for example, a video game, where updates are constantly happening to fix bugs and take input from the community.\u003c/p\u003e\n\u003cp\u003eA sprint begins with a planning session that is used to define what items from the backlog can be delivered upon and how that work will be accomplished. The first half of the session is between the development team and the product owner where they discuss which items will be accepted into the sprint, usually only the items the team thinks they have a shot of completing within the set time. In the second half of the session, the developers will break down individual stores into tasks to help the team accomplish their respective duties.\u003c/p\u003e\n\u003cp\u003eWhile the sprint is ongoing, each workday begins with a standup where the product owner, team leader, and the development team discuss what work was done the previous day and what work they plan to do that day. They will also discuss if they have any blockers preventing the team from working on an item from the backlog. The meetings are generally short and only one person is allowed to speak at a time for a max of generally a minute. At the end of a sprint, the sprint review takes place. The first portion is the demo of the completed work that is shown to the stakeholders and the second portion is the sprint lookback. The sprint lookback is a chance for the team to look back at how the sprint went and how they could improve and who can improve. A burn-up chart is also usually kept to track the team\u0026rsquo;s progress within the sprint which can be used to see if the backlog can be completed within the time frame or not.\u003c/p\u003e\n\u003ch4 id=\"kanban\"\u003eKanban\u003c/h4\u003e\n\u003cp\u003eKanban is more flexible than Scrum as it only has three principles:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMake all work visible\u003c/li\u003e\n\u003cli\u003eLimit work in progress\u003c/li\u003e\n\u003cli\u003ePractice continual self-improvement\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAs such, many teams can find Kanban harder to implement. However, since Kanban is so flexible it can be rendered in a way that is just the right fit for your team. Typically, Kanban implements the use of a board where all team members can see where all tasks lay in implementation. Teams typically work on one task at a time rather than having multiple tasks being rendered out at one like in a sprint. When an item is completed, work can be focused on the next priority. This allows teams to have fast responses to changes. Work-in-progress limits are also often defined before any work begins. These are limits on the number of items that can be in any given column at a time. This prevents code from sitting there for too long and time being wasted. While Kanban does not require meetings like Scrum, teams often will meet at the same frequency to Scrum teams to allow teams to know of any upcoming work and get progress reports. Similar to the burn-up chart in Scrum, Kanban uses a continuous flow diagram (CFD), a line chart that shows how many items are in each column in a system at a given time. Reasonably, these lines should be kept flat to prevent work build-up. The last important aspect of Kanban is the topic of continuous improvement, one of the pillars of Kanban. Teams will often meet and discuss any shortcomings of other team members and how they could improve for the future. This also applies to the work done as it can identify issues right away instead of later down the time and being corrects promptly.\u003c/p\u003e\n","description":"This post is going to focus on Agile and two versions of Agile that are used in modern software development. First we will focus on Scrum and then move onto Kanban.","image":null,"permalink":"/blogs/blog_1/","title":"Agile vs. Scrum"}]